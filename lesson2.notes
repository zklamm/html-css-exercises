-----------------------------------------------------------
    The Box Model
-----------------------------------------------------------
---Everything is a Box
- every element requires a box-shaped segment of the page
- every character of text content also needs a boxed portion of the page
- the browser calculates the dimensions of that box by using the browser defaults and CSS

Box Properties:
- width/height: horizontal and vertical space needed for the content area of the box, which may or may not include the padding and borders
- padding: area that surrounds the content area of the box and separates the content from its border, typically opaque and hides anything that it overlays
- border: boundary that surrounds the padding
- margin: transparent area that lies outside the border and supplies separation between elements
- display: determines how the browser lays out an element relative to its neighbors

---The Visual Formatting Model
The `display` property of an element is called the visual formatting model.

Block Elements:
- by default, a `block` element occupies all horizontal space available within its container, with nothing to the left or right of the block
- though a `block` element takes up an entire row in a container, this does not alter the width of the element
- you can convert any element to a `block` element with the `display: block` CSS property

Inline Elements:
- provide a small bit of semantic meaning to content
- `inline` elements handle the box properties differently from `block` elements...
- for `inline` elements, browsers:
  1. handle left and right margins and left and right padding the same way as `block` elements
  2. ignore the width and height properties (except with `img` element), but instead use values calculated from the element content
  3. ignore top and bottom margins
  4. don't ignore borders, but the results may look odd
  5. don't ignore top and bottom padding, but you won't notice this unless you have a border or background
- you can convert any element to an `inline` element with the `display: inline` CSS property
- the left/right factors affect the flow, while the top and bottom do not

Inline-Block Elements:
- 
